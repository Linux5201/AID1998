1、IO模型：阻塞IO  非阻塞IO  IO多路复用

    阻塞IO：默认形态，效率低，实现简单
    非阻塞IO：将IO变为非阻塞

2、IO多路复用

    select：支持windows linux Unix      效率相对epoll一般，最多监听1024个IO
    poll:支持linux Unix   支持监控更多IO   效率相对epoll一般
    epoll:效率高，有更多的触发方式    只支持linux

3、协程：在应用层通过函数的暂停跳转实现多个任务间切换执行，其中每个函数都可以从任意位置暂停跳出，并重写调用
继续执行。

* 本质是单线程，无法使用cpu多核资源
* 开销少


HTTPServer v2.0

主要功能：
1、接收客户端（浏览器）请求
2、解析客户端发送请求
3、根据请求组织数据内容
4、将数据内容形成http响应格式返回给浏览器

升级点：
1、采用IO并发，可以满足多个客户端同时发起请求情况
2、做基本请求解析，根据具体请求返回具体内容，同时满足客户端简单的非网页请求情况
3、用类封装功能模块


技术分析：
    1、使用tcp通信，基于http协议格式
    2、select  io多路复用

结构： 采用各类封装

类的接口设计：

1、在用户使用的角度进行流程设计

    * 当需要完成的功能是一个比较大的概括的功能，可以提供继承方法，让别人使用时继承你的类
    * 针对一个非常具体的功能，尽量帮用户实现更多的功能，让用户尽可能少的修改代码或尽可能
    简单使用。
    * 不能替用户决定的属性，让用户传参
    * 不能替用户觉得功能复杂，让用户重写

2、确定功能，参数，使用方法















